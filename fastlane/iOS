XCODE_PATH='./ios/app.xcodeproj'
XCODE_WORKSPACE='./ios/app.xcworkspace'
IPA_DIRECTORY='./ios/build'
IPA_NAME='release.ipa'
APP_ID=ENV['APP_ID']
INTERNAL = ENV['INTERNAL_BUILD'] == 'true'

private_lane :setBuildNumberIOS  do |options|
  increment_build_number(
    build_number: options[:build_number],
    xcodeproj: XCODE_PATH
  )
  increment_build_number_in_plist(
    build_number: options[:build_number],
    xcodeproj: XCODE_PATH
  )
end

private_lane :incrementBuildNumberIOS  do |options|
  increment_build_number_in_plist(xcodeproj: XCODE_PATH)
  increment_build_number(xcodeproj: XCODE_PATH)
end

private_lane :incrementPatchVersionIOS  do |options|
  increment_version_number_in_xcodeproj(xcodeproj: XCODE_PATH, bump_type: "patch")
end

private_lane :incrementMinorVersionIOS  do |options|
  increment_version_number_in_xcodeproj(xcodeproj: XCODE_PATH, bump_type: "minor")
end

private_lane :incrementMajorVersionIOS  do |options|
  increment_version_number_in_xcodeproj(xcodeproj: XCODE_PATH, bump_type: "major")
end

private_lane :getApiKey do |options|
    app_store_connect_api_key(
        duration: 1200,
        in_house: false,
        key_id: ENV['IOS_API_ID'],
        key_content: ENV['IOS_API_KEY'],
        issuer_id: ENV['IOS_API_ISSUER']
    )
end

private_lane :prepareIOS do |options|
    PROFILE_TYPE = INTERNAL ? "adhoc" : "appstore"

    # setup_circle_ci

    api_key = getApiKey

    sync_code_signing(
        api_key: api_key,
        git_branch: "ios",
        type: PROFILE_TYPE,
        app_identifier: APP_ID,
        team_id: ENV['DEVELOPMENT_TEAM'],
        git_url: ENV['IOS_CREDS_REPO']
    )
end

private_lane :buildIOS do |options|
    PROFILE_TYPE = INTERNAL ? "AdHoc" : "AppStore"
    export_method = INTERNAL ? "ad-hoc" : "app-store"
    profile_name = "match #{PROFILE_TYPE} #{APP_ID}"

    update_code_signing_settings(
        path: XCODE_PATH,
        bundle_identifier: APP_ID,
        profile_name: profile_name,
        use_automatic_signing: false,
        team_id: ENV['DEVELOPMENT_TEAM'],
        code_sign_identity: "iPhone Distribution"
    )

    build_app(
        silent: true,
        scheme: "app",
        output_name: IPA_NAME,
        configuration: "Release",
        workspace: XCODE_WORKSPACE,
        suppress_xcode_output: true,
        export_method: export_method,
        output_directory: IPA_DIRECTORY
    )

    update_code_signing_settings(
        path: XCODE_PATH,
        profile_name: "",
        use_automatic_signing: true,
        team_id: ENV['DEVELOPMENT_TEAM'],
        code_sign_identity: "Apple Development",
        bundle_identifier: APP_ID
    )
end

private_lane :uploadIOS do |options|
    api_key = getApiKey
    ipa = "#{IPA_DIRECTORY}/#{IPA_NAME}"
    upload_to_testflight(
       ipa: ipa,
       api_key: api_key,
       team_id: ENV['DEVELOPMENT_TEAM'],
       skip_waiting_for_build_processing: true
    )
    next
end

desc "prepare, build and deploy iOS"
lane :ios do |options|
    prepareIOS
    buildIOS
    uploadIOS
end
